name: Build & Deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    env:
      BUILD_ZIP: v${{ github.run_number }}.zip
      RELEASE_DIR: /home/deploy/build/releases
      # 実ディレクトリではなく、シンボリックリンクで作成
      APP_DIR: /home/deploy/build/app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Package build
        run: |
          cd dist
          zip -r ../$BUILD_ZIP *

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          generate_release_notes: true
          files: ${{ env.BUILD_ZIP }}

      - name: Copy file to VPS
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: ${{ env.BUILD_ZIP }} 
          target: ${{ env.RELEASE_DIR }}

      - name: Activate new release
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: BUILD_ZIP
          script: |
            set -e # エラー時にスクリプト停止

            # --- 新しいリリースを展開 ---
            cd ${{ env.RELEASE_DIR }}
            unzip -q ${{ env.BUILD_ZIP }} -d ${{ github.run_number }}
            rm ${{ env.BUILD_ZIP }}

            # --- シンボリックリンクを切り替えてリリースを有効化 ---
            # ln -sfn <source> <link_name>
            # -s: シンボリックリンクを作成
            # -f: リンク先が既に存在する場合、強制的に上書き
            # -n: リンク先がディレクトリの場合に、その中ではなくリンク自体を置き換える
            ln -sfn ${{ env.RELEASE_DIR }}/${{ github.run_number }} ${{ env.APP_DIR }}

            # --- 古いリリースを 5 世代分だけ残して削除 ---
            targets=$(ls -dt ${{ env.RELEASE_DIR }}/*/ | tail -n +6)
            if [ -n "$targets" ]; then
                echo "削除対象:"
                ls -ldh $targets
                rm -rf $targets
            fi
