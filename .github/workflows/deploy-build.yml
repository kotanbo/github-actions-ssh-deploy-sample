name: Build & Deploy

on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    env:
      BUILD_ZIP: v${{ github.run_number }}.zip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Package build
        run: |
          cd dist
          zip -r ../$BUILD_ZIP *

      - name: Create Release
        id: create_release # steps.create_release で参照可能にするため id を指定
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $BUILD_ZIP
          asset_name: $BUILD_ZIP
          asset_content_type: application/zip

      - name: Copy file to VPS
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: $BUILD_ZIP
          target: "/home/deploy/build/"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/deploy/build
            # バックアップ
            if [ -d myapp ]; then
              cp -r myapp myapp_backup_$(date +%Y%m%d%H%M%S)
              rm -rf myapp
            fi
            # 新しいビルドを展開
            unzip $BUILD_ZIP -d myapp
            rm myapp-v${{ github.run_number }}.zip
